<?php

namespace AppBundle\Controller;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use AppBundle\Form\FotoType;
use AppBundle\Entity\Imagen;


 /**
     * @Route("/gestionImagenes")
     */
class GestionImagenesController extends Controller
{
     /**
     * @Route("/nuevaImagen", name="nuevaImagen")
     */
    public function nuevaImagenAction(Request $request)
    {   
        
        // creamos imagen
        $imagenNueva = new Imagen();
        // hacemos constructor de form
       // $form = $this->createForm(FotoType::class, $imagenNueva); 
       $form = $this->createForm(new FotoType(), $imagenNueva); 
       // Recogemos la info
       $form->handleRequest($request);
       // validaciones
       if ($form->isSubmitted() && $form->isValid()) {
             // rellenamos el entity imagen
            $imagenNueva = $form->getData();
            $fotoFile = $imagenNueva->getImage();
            $fileName = $this->generateUniqueFileName().'.'.$fotoFile->guessExtension();

            // moves the file to the directory where brochures are stored
            $fotoFile->move(
                $this->getParameter('img_directory'),
                $fileName
            );
            $imagenNueva->setImage($fileName);
            //$imagenNueva->setTop(0);
            $imagenNueva->setFechaCreacion(new \DateTime());
           
            // almacenar nueva imagen
            $em = $this->getDoctrine()->getManager();
            $em->persist($imagenNueva);
            $em->flush();
            return $this->redirectToRoute('imagen', array('id' => $imagenNueva->getId()));
    }
        return $this->render('gestionImagenes/nuevaImagen.html.twig', array('form'=>$form->createView()));
    }

        /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}